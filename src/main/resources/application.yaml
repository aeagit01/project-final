#  https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
app:
  host-url: ${APP_HOST_URL:http://localhost}:${APP_PORT:-8080} # http://localhost:8080
  test-mail: ${SPRING_MAIL_USERNAME}
  templates-update-cache: 5s
  mail-sending-props:
    core-pool-size: 8
    max-pool-size: 100

spring:
  init:
    mode: never
  jpa:
    show-sql: true
    open-in-view: false

    # validate db by model
    hibernate:
      ddl-auto: validate

    properties:
      #  http://docs.jboss.org/hibernate/orm/5.3/userguide/html_single/Hibernate_User_Guide.html#configurations
      hibernate:
        format_sql: true
        default_batch_fetch_size: 20
        # https://stackoverflow.com/questions/21257819/what-is-the-difference-between-hibernate-jdbc-fetch-size-and-hibernate-jdbc-batc
        jdbc.batch_size: 20
  datasource:
    url: ${DATASOURCE_URL:jdbc:postgresql://localhost:5432/jira}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}$

  liquibase:
    changeLog: "classpath:db/changelog.sql"

  # Jackson Fields Serialization
  jackson:
    visibility:
      field: any
      getter: none
      setter: none
      is-getter: none

  # https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-application-properties.html#common-application-properties-cache
  cache:
    cache-names: users
    caffeine.spec: maximumSize=10000,expireAfterAccess=5m

  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT-ID}
            client-secret: ${ITHUB_CLIENT-SECRET}
            scope:
              - email
          google:
            client-id: ${GOOGLE_CLIENT-ID}
            client-secret: ${GOOGLE_CLIENT-SECRET}
            scope:
              - email
              - profile
          gitlab:
            client-id: ${GITLAB_CLIENT-ID}
            client-secret: ${GITLAB_CLIENT-SECRET}
            client-name: ${GITLAB_CLIENT-NAME}
            redirect-uri: ${GITLAB_REDIRECT-URI}
            authorization-grant-type: ${GITLAB_AUTHORIZATION-GRANT-TYPE}
            scope: read_user
        provider:
          gitlab:
            authorization-uri: ${GITLAB_AUTHORIZATION-URI}
            token-uri: ${GITLAB_TOKEN-URI}
            user-info-uri: ${GITLAB_USER-INFO-URI}
            user-name-attribute: ${GITLAB_USER-NAME-ATTRIBUTE}

  sql:
    init:
      mode: always

  mail:
    properties:
      mail:
        smtp:
          starttls:
            enable: true
          auth: true
    host: ${MAIL_HOST}
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    port: ${MAIL_PORT:587}
  thymeleaf.check-template-location: false

  mvc.throw-exception-if-no-handler-found: true
  web.resources.add-mappings: false

logging:
  level:
    root: WARN
    com.javarush.jira: DEBUG
    com.javarush.jira.common.config.MvcConfig: WARN
    org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver: DEBUG

server:
  #  https://springdoc.org/index.html#how-can-i-deploy-springdoc-openapi-ui-behind-a-reverse-proxy
  forward-headers-strategy: framework
  servlet:
    encoding:
      charset: UTF-8 # Charset of HTTP requests and responses. Added to the "Content-Type" header if not set explicitly
      enabled: true # Enable http encoding support
      force: true
springdoc.swagger-ui.path: /doc
